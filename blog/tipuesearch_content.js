var tipuesearch = {"pages":[{"title":"About","text":"cmsimde 內容管理系統 倉儲: https://github.com/mdecycu/cmsimde_site 網站: https://mde.tw/cmsimde_site/ 簡報: https://mde.tw/cmsimde_site/reveal 網誌: https://mde.tw/cmsimde_site/blog","tags":"misc","url":"./pages/about/"},{"title":"41123230-W13","text":"更新前幾週網誌 更新前幾週網誌","tags":"w13更新前幾週網誌","url":"./41123230-W13-blog.html"},{"title":"41123230-W12","text":"各學員利用 NX 1872 繪製鋼球平衡台所需的零組件 各學員利用 NX 1872 繪製鋼球平衡台所需的零組件 將各分組倉儲設為評分倉儲的子模組 實習任務一: NXOpen python程式檔:<a href= \"https://www.google.com.tw/\">TO GOOGLE 零件檔:<a href= \"https://www.google.com.tw/\">TO GOOGLE 心得:這次使用NX作圖其實還不錯因為之前有使用過，也讓我知道NX其他的使用方法","tags":"w12利用 各學員利用 NX 1872 繪製鋼球平衡台所需的零組件","url":"./41123230-W12-blog.html"},{"title":"41123230-W11","text":"利用 NXOpen Python 建立鋼球平衡台中的平台零件 利用 NXOpen Python 建立鋼球平衡台中的平台零件 請根據 Solvespace_model _2d_for_cd2024_w6.7z 零組件尺寸, 利用 Siemens NX1872.7z (需要登入 @nfu.edu.tw, cd2024 採用電腦安裝的 NX1872 或隨身碟中的 NX1872) 執行零組件繪圖, 完成後請將過程影片放入個人與分組網站中. 建立協同 Web-based 機電系統模擬設計必須涉及的議題包括： 如何使用 NX 執行零組件繪圖 如何使用1872版安裝及可攜版 如何啓動及連網認證 了解啓動後用戶設定的存檔位置 認識 NX 的目錄模組架構 認識 NXOpen Python 程式延伸架構 了解 Journal 程式設定、建立及執行 了解如何針對設計繪圖尺寸單位選擇 - 學習草圖建構、參數選用及長出特徵使用 - 學習如何完成零件組立 - 了解零組件轉檔相關知識（如選用零組件座標系統、STL格式及尺寸比例） 了解如何轉入 CoppeliaSim，如何選擇合用的尺寸及比例 了解如何進行場景組件的座標系統轉換 了解開放式機構及封閉式機構的場景如何設置 認識場景存檔的三種格式（binary與XML間的轉換及應用)及應用時機 瞭解如何運用 Web-based 場景模擬串流 學習如何建立場景控制程式（internal Lua、Python、Remoteapi Python、IPv4 Websocket&ZMQ vs IPv6 Websocket&ZMQ) 了解如何協同整理資料、編寫網誌、建立網際簡報及結案報告","tags":"w11利用 NXOpen Python 建立鋼球平衡台中的平台零件","url":"./41123230-W11-blog.html"},{"title":"41123230-W10","text":"鋼球平衡台 PID 控制與模擬 鋼球平衡台 PID 控制與模擬 這是 W10 實習的任務一: 已知: 2b 初步資料放入數列 可以將 2b.txt 即時資料取出, 並且將每一行隔開後, 逐一放入數列. 後續處理: 只要透過 for 重複迴圈, 就可以從上列資料中每位學員的基本資料 (學號、Github 帳號與組別) 中直接在網頁建立所需的 html. 學員倉儲連結 template: https://github.com/學員帳號/cd2024 學員網站連結 template: https://學員帳號.github.io/cd2024 2b 分組倉儲連結 template: https://github.com/mdecd2024/2b-midbg組別 2a 分組倉儲連結 template: https://github.com/mdecd2024/2a-midag組別 這是 W10 實習的任務二: 請下載 cd2024_ball_balancing_platform_control_ref.7z, 閱讀後請將摘要內容放入個人與分組網誌中.","tags":"w10","url":"./41123230-W10-blog.html"},{"title":"41123230-W9期中考週","text":"期中考週 期中考週 對 Gemini 1.5 Pro 提問: 以下為利用 PID 控制 CoppeliaSim 鋼球平衡台場景的 ZMQ RemoteAPI Python 程式, 請利用 Python 模組將系統控制過程, 鋼球在平衡台上的 x 方向座標與 y 方向, 利用 matplotlib 畫出來. \"這裡附上原本的 PID 控制程式碼\" 回答: #導入必要的模組 import zmq import time import matplotlib.pyplot as plt #建立 ZMQ context 和 socket context = zmq . Context () socket = context . socket ( zmq . REQ ) socket . connect ( \"tcp://localhost:23000\" ) #PID 控制參數（請替換為您的實際參數） Kp = 1.0 Ki = 0.1 Kd = 0.01 #初始化變數 x_positions = [] y_positions = [] prev_error = 0 integral_error = 0 #控制循環 while True : # 獲取鋼球的 x 和 y 方向座標（請替換為您的實際程式碼） socket . send ( b \"get_ball_position\" ) message = socket . recv_json () x_position = message [ \"x\" ] y_position = message [ \"y\" ] # 將座標添加到列表中 x_positions . append ( x_position ) y_positions . append ( y_position ) # 計算 PID 控制輸出（請替換為您的實際程式碼） error = # ... 計算誤差 ... integral_error += error derivative_error = error - prev_error output = Kp * error + Ki * integral_error + Kd * derivative_error prev_error = error # 發送控制指令到 CoppeliaSim（請替換為您的實際程式碼） # ... # 繪製圖形 plt . clf () # 清除之前的圖形 plt . plot ( x_positions , label = \"X Position\" ) plt . plot ( y_positions , label = \"Y Position\" ) plt . xlabel ( \"Time\" ) plt . ylabel ( \"Position\" ) plt . legend () plt . pause ( 0.01 ) # 暫停以便圖形更新 # 延遲 time . sleep ( 0.01 ) #關閉 socket 和 context socket . close () context . term () 程式碼說明: 程式碼首先導入必要的模組，包括 zmq 用于與 CoppeliaSim 通信，time 用于延遲，以及 matplotlib.pyplot 用于繪圖。建立 ZMQ context 和 socket，並連接到 CoppeliaSim 的 RemoteAPI 端口。 初始化 PID 控制參數、變數和用於存儲鋼球座標的列表。 控制循環中，首先獲取鋼球的 x 和 y 方向座標。 計算 PID 控制輸出並發送控制指令到 CoppeliaSim。 將座標添加到列表中，並使用 matplotlib 繪製 x 和 y 方向座標隨時間變化的圖形。 程式最後關閉 socket 和 context。 請注意: 您需要將示例程式碼中的 PID 控制部分替換為您的實際程式碼。 您需要根據您的場景調整 get_ball_position 函數以獲取鋼球的座標。 您可以根據需要調整 matplotlib 繪圖參數以獲得更清晰的視覺化效果。 希望這個示例程式碼能幫助您使用 matplotlib 視覺化 CoppeliaSim 鋼球平衡台 PID 控制過程。","tags":"w9","url":"./41123230-W9-blog.html"},{"title":"41123230-W8拍攝個人影片","text":"介紹個人倉儲內容、靜態、網誌及團隊倉儲 完成影片 上傳影片","tags":"w8","url":"./41123230-W8-blog.html"},{"title":"41123230-W7清明連假暫停一次","text":"清明連假暫停一次 清明連假暫停一次 清明連假暫停一次","tags":"w7","url":"./41123230-W7-blog.html"},{"title":"41123230-W6分組任務","text":"完成分配到的影片上字幕 完成並上傳上字幕任務 內容管理系統 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. # 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"w6","url":"./41123230-W6-blog.html"},{"title":"41123230-W5老師新增影片上字幕作業","text":"老師新增影片上字幕作業 新增翻譯作業1-11頁","tags":"w5","url":"./41123230-W5-blog.html"},{"title":"41123230-W4Odoo翻譯作業","text":"Odoo翻譯作業 老師增加翻譯作業 組長分配翻譯工作1-11頁","tags":"w4","url":"./41123230-W4-blog.html"},{"title":"41123230-W3建立2b-midag7 的子模組, 且以各組員的學號作為子模組的名稱","text":"建立2b-midag7 的子模組, 且以各組員的學號作為子模組的名稱 建立2b-midag7 的子模組, 且以各組員的學號作為子模組的名稱","tags":"w3","url":"./41123230-W3-blog.html"},{"title":"41123230-W2組長建立各組倉儲","text":"組長建立各組倉儲 組長建立各組倉儲 加入2b-midag7","tags":"w2","url":"./41123230-W2-blog.html"},{"title":"41123230-W1建立個人倉儲","text":"./ 建立個人倉儲 建立個人倉儲","tags":"w1","url":"./41123230-W1-blog.html"}]};